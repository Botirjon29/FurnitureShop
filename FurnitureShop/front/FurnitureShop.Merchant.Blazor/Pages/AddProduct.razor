@page "/add-product/{organizationId}"
@using FurnitureShop.Merchant.Blazor.Dtos
@using FurnitureShop.Merchant.Blazor.Services
@inject NavigationManager NavManager
@inject ProductService productService
<PageTitle>Add Product</PageTitle>

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Name" HelperText="Max. 8 characters" @bind-Value="model.Name" For="@(() => model.Name)" />
                    <MudTextField Label="Description" HelperText="Max. 8 characters" @bind-Value="model.Description" For="@(() => model.Description)" />
                    <MudTextField Label="Brend" HelperText="Max. 8 characters" @bind-Value="model.Brend" For="@(() => model.Brend)" />
                    <MudTextField Label="Material" HelperText="Max. 8 characters" @bind-Value="model.Material" For="@(() => model.Material)" />
                    <MudTextField Label="Price" HelperText="Max. 8 characters" @bind-Value="model.Price" For="@(() => model.Price)" />
                    <MudTextField Label="Count" HelperText="Max. 8 characters" @bind-Value="model.Count" For="@(() => model.Count)" />
                    <MudTextField Label="Category" HelperText="Max. 8 characters" @bind-Value="model.CategoryId" For="@(() => model.CategoryId)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    bool success;
    [Parameter]
    public string? organizationId { get; set; }

    CreateProductDto? model = new CreateProductDto();

    protected void Redirect(string route)
    {
        NavManager.NavigateTo(route);
    }

    private async Task OnValidSubmit(EditContext context)
    {
        model.OrganizationId = new Guid(organizationId);
        var result = await productService.CreateProductAsync(model);
        if(result.IsSuccess)
        {
            success = true;
            StateHasChanged();
            Redirect("/organizations");
        }
    }
}