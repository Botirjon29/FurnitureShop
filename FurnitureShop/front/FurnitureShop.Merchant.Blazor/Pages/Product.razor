@page "/product/{productId}"
@using FurnitureShop.Merchant.Blazor.ViewModel
@using Newtonsoft.Json
@using FurnitureShop.Merchant.Blazor.Services
@inject ProductService productServcie
@inject NavigationManager NavManager
<PageTitle>Product</PageTitle>

<div class="container">
    <div class="row d-flex">
        <div class="col-md-6">
            <MudImage Src="https://mudblazor.com/images/sweden.jpg" Width="332" Height="250" Alt="Swedish Farm House" Elevation="25" Class="rounded-lg ma-4" />
        </div>

        <div class="col-md-6 py-3">
            <h1 style="font-size:30px; color: #555; margin-bottom:10px;">@_product.Name</h1>
            <p style="color: #666; margin-bottom: 10px;">
                @_product.Description
            </p>

            <p>
                Brend: @_product.Brend
            </p>
            <br />
            <div class="d-flex">
                <p style="color:#555; margin-bottom:10px; margin-right:30px;">
                    Price: <span style="color: #444; font-weight:bold; font-size: 15px;">
                        @_product.Price$
                    </span>
                </p>

                <p style="margin-right:30px;">
                    Count: @_product.Count
                </p>
          
                <p style="margin-right:40px;">
                    View: @_product.Views
                </p>

            </div>
            <div style="margin-top: 10px;" class="d-flex">
                <a style="margin-right:30px;" href="/update-product/@productId/@_product.OrganizationId">
                    <MudButton Variant="Variant.Filled" Color="Color.Warning">Update</MudButton>
                </a>

                <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@DeleteProduct">Delete</MudButton>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? productId { get; set; }

    ProductView _product = new ProductView();

    protected void Redirect()
    {
        NavManager.NavigateTo($"/organization/{_product.OrganizationId}");
    }
    

    protected override async Task OnInitializedAsync()
    {
        var result = await productServcie.GetProductByIdAsync(productId);
        if(result.IsSuccess)
        {
            _product = result.Data;
        }
    }

    private async Task DeleteProduct()
    {
        var result = await productServcie.DeleteProductAsync(productId);
        if (result.IsSuccess)
            Redirect();
    }
}
