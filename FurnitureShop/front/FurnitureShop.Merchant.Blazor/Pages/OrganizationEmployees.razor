@page "/OrganizationEmployees/{organizationId}/{employeeType}"
@using Newtonsoft.Json
@using FurnitureShop.Merchant.Blazor.ViewModel
@inject HttpClient httpClient;

<h3>OrganizationEmployees</h3>

<h4>@organizationId</h4>

@foreach(var employee in employees)
{
    <p>@employee.FirstName"</p> 
    <p>@employee.Email</p>
    <p>@employee.Id</p>
}

@code {
    [Parameter]
    public string organizationId { get; set; }
    [Parameter]
    public string employeeType { get; set; }
    
    public string json { get; set; }
    public List<UserView> employees { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var client = new HttpClient();
        client.BaseAddress = new Uri("https://localhost:1009");
        var message = new HttpRequestMessage();
        
        if(employeeType == "owner")
            message = new HttpRequestMessage(HttpMethod.Get, $"/api/employee/owner/{organizationId}");
        
        if(employeeType == "managers")
            message = new HttpRequestMessage(HttpMethod.Get, $"/api/employee/managers/{organizationId}");
        
        if(employeeType == "sellers")
            message = new HttpRequestMessage(HttpMethod.Get, $"/api/employee/sellers/{organizationId}");
        else
            message = new HttpRequestMessage(HttpMethod.Get, $"/api/employee/allstaff/{organizationId}");

        message.SetBrowserRequestCredentials(BrowserRequestCredentials.Include);

        json = await (await client.SendAsync(message)).Content.ReadAsStringAsync();
        employees = JsonConvert.DeserializeObject<List<UserView>>(json);
    }
    
}
